#to be used standalone
server {
    listen 80;
    server_name localhost;  # Replace with your domain

    location / {
        proxy_pass http://app:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# to be used with localhost.sh

# server {
#     listen 443 ssl;
#     server_name localhost; # Replace with your localhost or ip address

#     ssl_certificate     /etc/nginx/conf.d/localhost.crt;
#     ssl_certificate_key /etc/nginx/conf.d/localhost.key;

#     location / {
#         proxy_pass http://app:4000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# }

# server {
#     listen 80;
#     server_name dev.domain.com;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     server_tokens off;
#     location ~/.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }
#     return 301 https://$host$request_uri; #to create verification
# }

# server {
#     listen 443 ssl;
#     listen [::]:443 ssl;
#     server_name dev.domain.com;

#     ssl_certificate /etc/letsencrypt/live/dev.domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/dev.domain.com/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

#     location / {
#         proxy_pass http://app:4000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# }