# to be used standalone
server {
    listen 80;
    server_name localhost;  # Replace with your domain

    location / {
        proxy_pass http://app:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# to be used with localhost.sh
# server {
#     listen 443 ssl;
#     server_name localhost;

#     ssl_certificate     /etc/nginx/conf.d/localhost.crt;
#     ssl_certificate_key /etc/nginx/conf.d/localhost.key;

#     location / {
#         proxy_pass http://app:4000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# }

# server {
#     listen 80;
#     server_name localhost;
#     server_tokens off;
#     location ~/.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }
#     return 301 https://localhost$request_uri;
# }

# server {
#     listen 443;
#     server_name localhost;

#     ssl_certificate /etc/letsencrypt/live/2eff-69-157-2-47.ngrok-free.app/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/2eff-69-157-2-47.ngrok-free.app/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

#     location /.well-known/acme-challenge {
#         allow all;
#         root /var/www/html;
#     }

#     location / {
#         proxy_pass http://app:4000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# }