name: Node.js CI

on: [push]

jobs:
  deployment:
    runs-on: ubuntu-latest
    environment: Test
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21.x'
      - name: Install dependencies (backend)
        run: npm ci
        working-directory: ./backend
      - name: Run tests
        run: npm test
        working-directory: ./backend
        env:
          NODE_ENV: 'test'
          ORGANIZATION_API_KEY: ${{ env.ORGANIZATION_API_KEY }}
          MONGO_URL: ${{ secrets.MONGO_URL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PASSWORD: ${{ env.PASSWORD }}
          EMAIL: ${{ env.EMAIL }}
          PROMPT_SERVER_URL: ${{ env.PROMPT_SERVER_URL }}
          PROMPT_SERVER_PORT: ${{ env.PROMPT_SERVER_PORT }}
          SETUP: ${{ env.SETUP }}
          HOSTING: ${{ env.LOCAL }}
      - name: Run tests
        run: npm run dev &
        working-directory: ./backend
        env:
          NODE_ENV: 'development'
          ORGANIZATION_API_KEY: ${{ env.ORGANIZATION_API_KEY }}
          MONGO_URL: ${{ secrets.MONGO_URL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PASSWORD: ${{ env.PASSWORD }}
          EMAIL: ${{ env.EMAIL }}
          PROMPT_SERVER_URL: ${{ env.PROMPT_SERVER_URL }}
          PROMPT_SERVER_PORT: ${{ env.PROMPT_SERVER_PORT }}
          SETUP: ${{ env.SETUP }}
          HOSTING: ${{ env.LOCAL }}
      - name: Healthcheck server # Call /ping endpoint
        run: |
          curl -X GET $PROMPT_SERVER_URL/ping
        env:
          PROMPT_SERVER_URL: ${{ env.PROMPT_SERVER_URL }}
      - name: Install dependencies (frontend)
        run: npm ci
        working-directory: ./frontend
      - name: Test (frontend)
        run: npm run test
        working-directory: ./frontend
        env:
          NODE_ENV: 'development'
          ORGANIZATION_API_KEY: ${{ env.ORGANIZATION_API_KEY }}
          MONGO_URL: ${{ secrets.MONGO_URL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PASSWORD: ${{ env.PASSWORD }}
          EMAIL: ${{ env.EMAIL }}
          PROMPT_SERVER_URL: ${{ env.PROMPT_SERVER_URL }}
          PROMPT_SERVER_PORT: ${{ env.PROMPT_SERVER_PORT }}
          SETUP: ${{ env.SETUP }}
          HOSTING: ${{ env.LOCAL }}
      - name: Build (frontend)
        run: npm run build-github-actions
        working-directory: ./frontend
      - name: Docker Hub POST Request
        if: success() # Ensures the POST request is made only if the previous steps succeeded
        run: |
          curl -X POST ${{ secrets.DOCKER }}